# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
    branches:
        include:
            - master
            - develop
            - releases/*

variables:
- group: DevDeploymentVarGroup

stages:
    - stage: 'Build'
      displayName: 'Build the front end react web application'
      jobs:
          - job: 'Build'
            displayName: 'Build job'
            pool:
                vmImage: '$(buildVmImage)'

            steps:
                - task: NodeTool@0
                  inputs:
                      versionSpec: '$(nodeVersion)'
                  displayName: 'Install Node.js'

                - script: 'npm install --global yarn'
                  displayName: 'Install Yarn'

                - script: |
                      yarn install
                      yarn build
                  displayName: 'yarn install and build'

                - task: CopyFiles@2
                  inputs:
                      sourceFolder: 'build'
                      contents: '**/*'
                      targetFolder: '$(Build.ArtifactStagingDirectory)'
                      cleanTargetFolder: true

                - task: ArchiveFiles@2
                  inputs:
                      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
                      archiveType: 'zip'
                      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
                      includeRootFolder: false
                      replaceExistingArchive: true

                - task: PublishBuildArtifacts@1
                  displayName: 'Publish Artifact: drop'
                  inputs:
                      pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

                - task: PublishBuildArtifacts@1
                  displayName: 'Publish Artifact: drop'
                  inputs:
                      pathtoPublish: 'infrastructure'

    - stage: 'Deploy'
      displayName: 'Deploy the react front end web application'
      dependsOn: Build
      condition: and (succeeded(), eq(variables['Build.SourceBranchName'], 'develop'))
      jobs:
          - deployment: Deploy
            pool: 'MyAgentPool'
            environment: Development
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - download: current
                              artifact: drop

                            - task: AzureResourceManagerTemplateDeployment@3
                              inputs:
                                deploymentScope: 'Resource Group'
                                azureResourceManagerConnection: '$(managedIdentityName)'
                                subscriptionId: '$(subscriptionId)'
                                action: 'Create Or Update Resource Group'
                                resourceGroupName: '$(resourceGroupName)'
                                location: '$(resourceGroupLocation)'
                                templateLocation: 'Linked artifact'
                                csmFile: '$(Pipeline.Workspace)/drop/azuredeploy.json'
                                csmParametersFile: '$(Pipeline.Workspace)/drop/azuredeploy.parameters.json'
                                overrideParameters: -webAppDomain $(appName) -webAppSuffix $(frontendSuffix) -sku $(appSku)
                                deploymentMode: 'Incremental'
                                deploymentName: 'deploy1'

                            - task: AzureWebApp@1
                              displayName: 'Azure App Service Deploy: react website'
                              inputs:
                                  azureSubscription: '$(managedIdentityName)'
                                  appName: '$(appName)'
                                  appType: 'webApp'
                                  package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
